<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\EmailTemplate;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Auth;
use Validator;


class EmailTemplatesController extends Controller
{
    public function index(){

        if(Auth::guard(userGuard())->check()){
            $user_id =  auth()->guard(userGuard())->user()->id;
            $templates =  EmailTemplate::where('agent_id',$user_id)->get();
            $title = "Email";
            return view('emailtemplate.index',compact('templates', 'title'));
        }
       
    }
    public function delete(Request $request){
        if(isset($request->id)){
            $user_id =  auth()->guard(userGuard())->user()->id;
            $deleteUser =   EmailTemplate::where('id',$request->id)->where('agent_id',$user_id)->delete();
            if($deleteUser){
                return response()->json(['success'=>'Message Template Deleted Successfully!']);
            }
        }
                return response()->json(['error'=>'Some Error Occurred!']);
    }
    public function edit($id = null){
        if(isset($id)){
            $user_id =  auth()->guard(userGuard())->user()->id;
            $getData =   EmailTemplate::where('id',$id)->where('agent_id',$user_id)->first();
            if($getData){
              return view('emailtemplate.create',compact('getData')); 
            }
            return redirect(request('backurl', route('email.templates')))->with('error', 'Message Template not found.');
        }
              return view('emailtemplate.create'); 

    }
    public function createUpdate(Request $request){
        
        //  $validate = Validator::make($request->all(),
        // [
        //      'name' => 'required',
        //      'description'=>'required',
        // ]
        // );
        // if($validate->fails()){
         
        //     return redirect()->back()->withInput()->with('error', $validate->messages()->first());
        // }
        
        //     $user_id =  auth()->guard(userGuard())->user()->id;    
        //     if(isset($request->id)){
        //     $action =  EmailTemplate::where('id',$request->id)->first();
        //     }else{
            $user_id =  auth()->guard(userGuard())->user()->id;  
                $action =    new  EmailTemplate();   
          //  }
        
            $action->name = $request->name;
            $action->description =  $request->input('description');
            $action->agent_id = $user_id;
            $action->category = $request->input('emailType');
            $action->save();
           
            if($action){
                return redirect()->route('email.templates')->with('success', 'Action performed Successfully.');      
            }
                return redirect()->back()->with('error', 'Action Failed.');      
    }


    public function activeDeactiveMessageTemplate(Request $request){
       $msgTemplate =  EmailTemplate::find($request->id);
       if($msgTemplate){
            $msgTemplate->status = !$msgTemplate->status;
            $msgTemplate->save();
            return response()->json(['success'=>true,'status'=>$msgTemplate->status]);
       }
       return response()->json(['success'=>false]);
    }
}
